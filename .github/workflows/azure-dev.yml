on:
  workflow_dispatch:
    inputs:
      AZURE_LOCATION:
        description: 'The location for deployment (ie eastus or centralus)'
        required: true
        type: string
      AZURE_ENV_NAME:
        description: 'The Azure environment (ie dev, test, prod)'
        required: false
        type: string
        default: 'dev'
      AZURE_INFRA_NAME:
        description: 'The name seed for all infrastructure.  A name seed of my01 will result in my01-rg and aks-my01'
        required: true
        type: string


#   push:
#     # Run when commits are pushed to mainline branch (main or master)
#     # Set this to the mainline branch you are using
#     branches:
#       - main
#       - master

# GitHub Actions workflow to deploy to Azure using azd
# To configure required secrets for connecting to Azure, simply run `azd pipeline config`

# Set up permissions for deploying with secretless Azure federated credentials
# https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux#set-up-azure-login-with-openid-connect-authentication


permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/azure-dev-cli-apps:latest
    env:
      environment: cset
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      AZURE_INFRA_NAME: ${{ vars.AZURE_INFRA_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in with Azure (Federated Credentials)
        if: ${{ env.AZURE_CLIENT_ID != '' }}
        run: |
          azd auth login `
            --client-id "$Env:AZURE_CLIENT_ID" `
            --federated-credential-provider "github" `
            --tenant-id "$Env:AZURE_TENANT_ID"
        shell: pwsh

      - name: Log in with Azure (Client Credentials)
        if: ${{ env.AZURE_CREDENTIALS != '' }}
        run: |
          $info = $Env:AZURE_CREDENTIALS | ConvertFrom-Json -AsHashtable;
          Write-Host "::add-mask::$($info.clientSecret)"

          azd auth login `
            --client-id "$($info.clientId)" `
            --client-secret "$($info.clientSecret)" `
            --tenant-id "$($info.tenantId)"
        shell: pwsh
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Provision Infrastructure
        run: azd provision --no-prompt
        env:
          AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
          AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
          AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          AZURE_INFRA_NAME: ${{ vars.AZURE_INFRA_NAME }}

      #############################################################################
      # set up kubectl
      - name: Get Environment
        run: |
          . .azure/dev/.env
          echo "AKS $Env.AZURE_AKS_CLUSTER_NAME or ${AZURE_AKS_CLUSTER_NAME}"

      - name: Azure login
        id: login
        uses: azure/login@v1
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: "$Env.AZURE_RESOURCE_GROUP" 
          cluster-name: "$Env.AZURE_AKS_CLUSTER_NAME"
      - name: Setup kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3
      - name: Deploy Mongo to AKS
        id: deploy-aks-mongo
        uses: Azure/k8s-deploy@v4
        with:
          namespace: 'ratingsapp'
          manifests: |
             ./src/manifests/mongo/ratings-mongodb-configmap.yaml
          images: 'docker.io/bitnami/mongodb:5.0.14-debian-11-r9 '
          pull-images: false 
      - name: Deploy Cert Manager to AKS
        id: deploy-aks-cert-manager
        uses: Azure/k8s-deploy@v4
        with:
          manifests: |
             ./src/manifests/cert-manager/cert-manager.yaml
        
      # docker.io/bitnami/mongodb:5.0.14-debian-11-r9    
      # ./src/manifests/cert-manager/cert-manager.yaml
      # images: '${{ secrets.registry }}.azurecr.io/${{ secrets.repository }}/azure-vote-front:${{ github.sha }}'
      #############################################################################

      - name: Deploy Application
        run: azd deploy --no-prompt
        env:
          AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
          AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
          AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
