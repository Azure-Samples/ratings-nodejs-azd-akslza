apiVersion: v1
items:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: ratings
      app.kubernetes.io/name: mongodb
    name: ratings-mongodb
    namespace: ratingsapp
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 8Gi
    storageClassName: default
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
    labels:
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: ratings
      app.kubernetes.io/name: mongodb
    name: ratings-mongodb
    namespace: ratingsapp
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: mongodb
        app.kubernetes.io/instance: ratings
        app.kubernetes.io/name: mongodb
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: mongodb
          app.kubernetes.io/instance: ratings
          app.kubernetes.io/name: mongodb
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: mongodb
                    app.kubernetes.io/instance: ratings
                    app.kubernetes.io/name: mongodb
                namespaces:
                - ratingsapp
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: MONGODB_EXTRA_USERNAMES
            value: mongo
          - name: MONGODB_EXTRA_DATABASES
            value: ratingsdb
          - name: MONGODB_EXTRA_PASSWORDS
            valueFrom:
              secretKeyRef:
                key: mongodb-passwords
                name: ratings-mongodb
          - name: MONGODB_ROOT_USER
            value: root
          - name: MONGODB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: mongodb-root-password
                name: ratings-mongodb
          - name: ALLOW_EMPTY_PASSWORD
            value: "no"
          - name: MONGODB_SYSTEM_LOG_VERBOSITY
            value: "0"
          - name: MONGODB_DISABLE_SYSTEM_LOG
            value: "no"
          - name: MONGODB_DISABLE_JAVASCRIPT
            value: "no"
          - name: MONGODB_ENABLE_JOURNAL
            value: "yes"
          - name: MONGODB_PORT_NUMBER
            value: "27017"
          - name: MONGODB_ENABLE_IPV6
            value: "no"
          - name: MONGODB_ENABLE_DIRECTORY_PER_DB
            value: "no"
          image: "${AZURE_CONTAINER_REGISTRY_ENDPOINT}/bitnami/mongodb:5.0.14-debian-11-r9"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bitnami/scripts/ping-mongodb.sh
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 10
          name: mongodb
          ports:
          - containerPort: 27017
            name: mongodb
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bitnami/scripts/readiness-probe.sh
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /bitnami/mongodb
            name: datadir
          - mountPath: /bitnami/scripts
            name: common-scripts
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: ratings-mongodb
        serviceAccountName: ratings-mongodb
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 360
            name: ratings-mongodb-common-scripts
          name: common-scripts
        - name: datadir
          persistentVolumeClaim:
            claimName: ratings-mongodb
- apiVersion: v1
  data:
    mongodb-passwords: bW9uZ28=
    mongodb-root-password: bW9uZ28=
  kind: Secret
  metadata:
    name: ratings-mongodb
    namespace: ratingsapp
  type: Opaque
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
    labels:
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: ratings
      app.kubernetes.io/name: mongodb
    name: ratings-mongodb
    namespace: ratingsapp
  spec:
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: mongodb
      port: 27017
      protocol: TCP
      targetPort: mongodb
    selector:
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: ratings
      app.kubernetes.io/name: mongodb
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  automountServiceAccountToken: true
  kind: ServiceAccount
  metadata:
    labels:
      app.kubernetes.io/instance: ratings
      app.kubernetes.io/name: mongodb
    name: ratings-mongodb
    namespace: ratingsapp
  secrets:
  - name: ratings-mongodb
kind: List
